/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateNotificationRequest,
  DocumentCreateRequest,
  DocumentCreateResponse,
  HTTPValidationError,
  NormalResponse,
} from '../models/index';
import {
    CreateNotificationRequestFromJSON,
    CreateNotificationRequestToJSON,
    DocumentCreateRequestFromJSON,
    DocumentCreateRequestToJSON,
    DocumentCreateResponseFromJSON,
    DocumentCreateResponseToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    NormalResponseFromJSON,
    NormalResponseToJSON,
} from '../models/index';

export interface CreateDocumentTpDocumentCreatePostRequest {
    documentCreateRequest: DocumentCreateRequest;
    apiKey?: string | null;
}

export interface CreateNotificationTpNotificationCreatePostRequest {
    createNotificationRequest: CreateNotificationRequest;
    apiKey?: string | null;
}

/**
 * 
 */
export class TpApi extends runtime.BaseAPI {

    /**
     * Create Document
     */
    async createDocumentTpDocumentCreatePostRaw(requestParameters: CreateDocumentTpDocumentCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DocumentCreateResponse>> {
        if (requestParameters['documentCreateRequest'] == null) {
            throw new runtime.RequiredError(
                'documentCreateRequest',
                'Required parameter "documentCreateRequest" was null or undefined when calling createDocumentTpDocumentCreatePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['apiKey'] != null) {
            headerParameters['api-key'] = String(requestParameters['apiKey']);
        }

        const response = await this.request({
            path: `/tp/document/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DocumentCreateRequestToJSON(requestParameters['documentCreateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DocumentCreateResponseFromJSON(jsonValue));
    }

    /**
     * Create Document
     */
    async createDocumentTpDocumentCreatePost(requestParameters: CreateDocumentTpDocumentCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DocumentCreateResponse> {
        const response = await this.createDocumentTpDocumentCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Notification
     */
    async createNotificationTpNotificationCreatePostRaw(requestParameters: CreateNotificationTpNotificationCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NormalResponse>> {
        if (requestParameters['createNotificationRequest'] == null) {
            throw new runtime.RequiredError(
                'createNotificationRequest',
                'Required parameter "createNotificationRequest" was null or undefined when calling createNotificationTpNotificationCreatePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['apiKey'] != null) {
            headerParameters['api-key'] = String(requestParameters['apiKey']);
        }

        const response = await this.request({
            path: `/tp/notification/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateNotificationRequestToJSON(requestParameters['createNotificationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => NormalResponseFromJSON(jsonValue));
    }

    /**
     * Create Notification
     */
    async createNotificationTpNotificationCreatePost(requestParameters: CreateNotificationTpNotificationCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NormalResponse> {
        const response = await this.createNotificationTpNotificationCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
