/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BaseSectionInfo } from './BaseSectionInfo';
import {
    BaseSectionInfoFromJSON,
    BaseSectionInfoFromJSONTyped,
    BaseSectionInfoToJSON,
    BaseSectionInfoToJSONTyped,
} from './BaseSectionInfo';
import type { DocumentTransformTask } from './DocumentTransformTask';
import {
    DocumentTransformTaskFromJSON,
    DocumentTransformTaskFromJSONTyped,
    DocumentTransformTaskToJSON,
    DocumentTransformTaskToJSONTyped,
} from './DocumentTransformTask';
import type { Label } from './Label';
import {
    LabelFromJSON,
    LabelFromJSONTyped,
    LabelToJSON,
    LabelToJSONTyped,
} from './Label';
import type { UserPublicInfo } from './UserPublicInfo';
import {
    UserPublicInfoFromJSON,
    UserPublicInfoFromJSONTyped,
    UserPublicInfoToJSON,
    UserPublicInfoToJSONTyped,
} from './UserPublicInfo';

/**
 * 
 * @export
 * @interface DocumentInfo
 */
export interface DocumentInfo {
    /**
     * 
     * @type {number}
     * @memberof DocumentInfo
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof DocumentInfo
     */
    category?: number | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfo
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfo
     */
    cover?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfo
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentInfo
     */
    from_plat?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof DocumentInfo
     */
    create_time?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof DocumentInfo
     */
    update_time?: Date | null;
    /**
     * 
     * @type {Array<Label>}
     * @memberof DocumentInfo
     */
    labels?: Array<Label> | null;
    /**
     * 
     * @type {Array<BaseSectionInfo>}
     * @memberof DocumentInfo
     */
    sections?: Array<BaseSectionInfo> | null;
    /**
     * 
     * @type {Array<UserPublicInfo>}
     * @memberof DocumentInfo
     */
    users?: Array<UserPublicInfo> | null;
    /**
     * 
     * @type {DocumentTransformTask}
     * @memberof DocumentInfo
     */
    transform_task?: DocumentTransformTask | null;
}

/**
 * Check if a given object implements the DocumentInfo interface.
 */
export function instanceOfDocumentInfo(value: object): value is DocumentInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function DocumentInfoFromJSON(json: any): DocumentInfo {
    return DocumentInfoFromJSONTyped(json, false);
}

export function DocumentInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'category': json['category'] == null ? undefined : json['category'],
        'title': json['title'] == null ? undefined : json['title'],
        'cover': json['cover'] == null ? undefined : json['cover'],
        'description': json['description'] == null ? undefined : json['description'],
        'from_plat': json['from_plat'] == null ? undefined : json['from_plat'],
        'create_time': json['create_time'] == null ? undefined : (new Date(json['create_time'])),
        'update_time': json['update_time'] == null ? undefined : (new Date(json['update_time'])),
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelFromJSON)),
        'sections': json['sections'] == null ? undefined : ((json['sections'] as Array<any>).map(BaseSectionInfoFromJSON)),
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserPublicInfoFromJSON)),
        'transform_task': json['transform_task'] == null ? undefined : DocumentTransformTaskFromJSON(json['transform_task']),
    };
}

export function DocumentInfoToJSON(json: any): DocumentInfo {
    return DocumentInfoToJSONTyped(json, false);
}

export function DocumentInfoToJSONTyped(value?: DocumentInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': value['category'],
        'title': value['title'],
        'cover': value['cover'],
        'description': value['description'],
        'from_plat': value['from_plat'],
        'create_time': value['create_time'] === null ? null : ((value['create_time'] as any)?.toISOString()),
        'update_time': value['update_time'] === null ? null : ((value['update_time'] as any)?.toISOString()),
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelToJSON)),
        'sections': value['sections'] == null ? undefined : ((value['sections'] as Array<any>).map(BaseSectionInfoToJSON)),
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserPublicInfoToJSON)),
        'transform_task': DocumentTransformTaskToJSON(value['transform_task']),
    };
}

