/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AttachmentInfo } from './AttachmentInfo';
import {
    AttachmentInfoFromJSON,
    AttachmentInfoFromJSONTyped,
    AttachmentInfoToJSON,
    AttachmentInfoToJSONTyped,
} from './AttachmentInfo';
import type { EmailInfo } from './EmailInfo';
import {
    EmailInfoFromJSON,
    EmailInfoFromJSONTyped,
    EmailInfoToJSON,
    EmailInfoToJSONTyped,
} from './EmailInfo';

/**
 * 
 * @export
 * @interface PrivateUserInfo
 */
export interface PrivateUserInfo {
    /**
     * 
     * @type {number}
     * @memberof PrivateUserInfo
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof PrivateUserInfo
     */
    daily_report_status?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUserInfo
     */
    daily_report_run_time?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PrivateUserInfo
     */
    fans?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PrivateUserInfo
     */
    follows?: number | null;
    /**
     * 
     * @type {AttachmentInfo}
     * @memberof PrivateUserInfo
     */
    avatar?: AttachmentInfo | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUserInfo
     */
    nickname?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PrivateUserInfo
     */
    slogan?: string | null;
    /**
     * 
     * @type {EmailInfo}
     * @memberof PrivateUserInfo
     */
    email_info?: EmailInfo | null;
    /**
     * 
     * @type {number}
     * @memberof PrivateUserInfo
     */
    default_document_reader_model_id?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PrivateUserInfo
     */
    default_revornix_model_id?: number | null;
}

/**
 * Check if a given object implements the PrivateUserInfo interface.
 */
export function instanceOfPrivateUserInfo(value: object): value is PrivateUserInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function PrivateUserInfoFromJSON(json: any): PrivateUserInfo {
    return PrivateUserInfoFromJSONTyped(json, false);
}

export function PrivateUserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateUserInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'daily_report_status': json['daily_report_status'] == null ? undefined : json['daily_report_status'],
        'daily_report_run_time': json['daily_report_run_time'] == null ? undefined : json['daily_report_run_time'],
        'fans': json['fans'] == null ? undefined : json['fans'],
        'follows': json['follows'] == null ? undefined : json['follows'],
        'avatar': json['avatar'] == null ? undefined : AttachmentInfoFromJSON(json['avatar']),
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'slogan': json['slogan'] == null ? undefined : json['slogan'],
        'email_info': json['email_info'] == null ? undefined : EmailInfoFromJSON(json['email_info']),
        'default_document_reader_model_id': json['default_document_reader_model_id'] == null ? undefined : json['default_document_reader_model_id'],
        'default_revornix_model_id': json['default_revornix_model_id'] == null ? undefined : json['default_revornix_model_id'],
    };
}

export function PrivateUserInfoToJSON(json: any): PrivateUserInfo {
    return PrivateUserInfoToJSONTyped(json, false);
}

export function PrivateUserInfoToJSONTyped(value?: PrivateUserInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'daily_report_status': value['daily_report_status'],
        'daily_report_run_time': value['daily_report_run_time'],
        'fans': value['fans'],
        'follows': value['follows'],
        'avatar': AttachmentInfoToJSON(value['avatar']),
        'nickname': value['nickname'],
        'slogan': value['slogan'],
        'email_info': EmailInfoToJSON(value['email_info']),
        'default_document_reader_model_id': value['default_document_reader_model_id'],
        'default_revornix_model_id': value['default_revornix_model_id'],
    };
}

