/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MCPServerUpdateRequest
 */
export interface MCPServerUpdateRequest {
    /**
     * 
     * @type {number}
     * @memberof MCPServerUpdateRequest
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof MCPServerUpdateRequest
     */
    category?: number | null;
    /**
     * 
     * @type {string}
     * @memberof MCPServerUpdateRequest
     */
    name?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MCPServerUpdateRequest
     */
    enable?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof MCPServerUpdateRequest
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MCPServerUpdateRequest
     */
    cmd?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MCPServerUpdateRequest
     */
    args?: string | null;
}

/**
 * Check if a given object implements the MCPServerUpdateRequest interface.
 */
export function instanceOfMCPServerUpdateRequest(value: object): value is MCPServerUpdateRequest {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function MCPServerUpdateRequestFromJSON(json: any): MCPServerUpdateRequest {
    return MCPServerUpdateRequestFromJSONTyped(json, false);
}

export function MCPServerUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MCPServerUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'category': json['category'] == null ? undefined : json['category'],
        'name': json['name'] == null ? undefined : json['name'],
        'enable': json['enable'] == null ? undefined : json['enable'],
        'address': json['address'] == null ? undefined : json['address'],
        'cmd': json['cmd'] == null ? undefined : json['cmd'],
        'args': json['args'] == null ? undefined : json['args'],
    };
}

export function MCPServerUpdateRequestToJSON(json: any): MCPServerUpdateRequest {
    return MCPServerUpdateRequestToJSONTyped(json, false);
}

export function MCPServerUpdateRequestToJSONTyped(value?: MCPServerUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': value['category'],
        'name': value['name'],
        'enable': value['enable'],
        'address': value['address'],
        'cmd': value['cmd'],
        'args': value['args'],
    };
}

