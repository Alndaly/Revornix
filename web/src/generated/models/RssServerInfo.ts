/* tslint:disable */
/* eslint-disable */
/**
 * Revornix Main Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 1142704468@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SectionInfo } from './SectionInfo';
import {
    SectionInfoFromJSON,
    SectionInfoFromJSONTyped,
    SectionInfoToJSON,
    SectionInfoToJSONTyped,
} from './SectionInfo';
import type { DocumentInfo } from './DocumentInfo';
import {
    DocumentInfoFromJSON,
    DocumentInfoFromJSONTyped,
    DocumentInfoToJSON,
    DocumentInfoToJSONTyped,
} from './DocumentInfo';

/**
 * 
 * @export
 * @interface RssServerInfo
 */
export interface RssServerInfo {
    /**
     * 
     * @type {number}
     * @memberof RssServerInfo
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof RssServerInfo
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof RssServerInfo
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof RssServerInfo
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof RssServerInfo
     */
    create_time: string;
    /**
     * 
     * @type {string}
     * @memberof RssServerInfo
     */
    update_time: string;
    /**
     * 
     * @type {Array<DocumentInfo>}
     * @memberof RssServerInfo
     */
    documents: Array<DocumentInfo>;
    /**
     * 
     * @type {Array<SectionInfo>}
     * @memberof RssServerInfo
     */
    sections: Array<SectionInfo>;
}

/**
 * Check if a given object implements the RssServerInfo interface.
 */
export function instanceOfRssServerInfo(value: object): value is RssServerInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('create_time' in value) || value['create_time'] === undefined) return false;
    if (!('update_time' in value) || value['update_time'] === undefined) return false;
    if (!('documents' in value) || value['documents'] === undefined) return false;
    if (!('sections' in value) || value['sections'] === undefined) return false;
    return true;
}

export function RssServerInfoFromJSON(json: any): RssServerInfo {
    return RssServerInfoFromJSONTyped(json, false);
}

export function RssServerInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RssServerInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'address': json['address'],
        'create_time': json['create_time'],
        'update_time': json['update_time'],
        'documents': ((json['documents'] as Array<any>).map(DocumentInfoFromJSON)),
        'sections': ((json['sections'] as Array<any>).map(SectionInfoFromJSON)),
    };
}

export function RssServerInfoToJSON(json: any): RssServerInfo {
    return RssServerInfoToJSONTyped(json, false);
}

export function RssServerInfoToJSONTyped(value?: RssServerInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'address': value['address'],
        'create_time': value['create_time'],
        'update_time': value['update_time'],
        'documents': ((value['documents'] as Array<any>).map(DocumentInfoToJSON)),
        'sections': ((value['sections'] as Array<any>).map(SectionInfoToJSON)),
    };
}

