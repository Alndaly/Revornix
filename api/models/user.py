from sqlalchemy import Boolean, Column, Integer, String, ForeignKey, DateTime
from sqlalchemy.orm import relationship
from common.sql import Base
    
class EmailUser(Base):
    __tablename__ = 'email_user'

    id = Column(Integer, primary_key=True)
    nickname = Column(String(200))
    user_id = Column(Integer, ForeignKey("user.id"), index=True)
    email = Column(String(100), index=True)
    hashed_password = Column(String(255), nullable=False)
    is_initial_password = Column(Boolean, default=False, nullable=False, comment='Whether it is the initial password generated by the system')
    initial_password = Column(String(255), comment='The initial password generated by the system')
    has_seen_initial_password = Column(Boolean, default=False, nullable=False, comment='Whether the initial password has been viewed')
    delete_at = Column(DateTime(timezone=True))

class FollowUser(Base):
    __tablename__ = "follow_user"

    id = Column(Integer, primary_key=True)
    to_user_id = Column(Integer, ForeignKey("user.id"), index=True)
    from_user_id = Column(Integer, ForeignKey("user.id"), index=True)
    create_time = Column(DateTime(timezone=True), nullable=False)
    update_time = Column(DateTime(timezone=True), nullable=False)
    delete_at = Column(DateTime(timezone=True))

class User(Base):
    __tablename__ = "user"

    id = Column(Integer, primary_key=True)
    uuid = Column(String(100), index=True, nullable=False)
    avatar_id = Column(ForeignKey('attachment.id'), nullable=False, index=True)
    nickname = Column(String(50), index=True, nullable=False)
    last_login_ip = Column(String(50))
    last_login_time = Column(DateTime(timezone=True))
    slogan = Column(String(200))
    gender = Column(Integer, comment='0: unk, 1: male, 2: female')
    age = Column(Integer)
    is_forbidden = Column(Boolean, default=False)
    create_time = Column(DateTime(timezone=True), nullable=False)
    update_time = Column(DateTime(timezone=True), nullable=False)
    delete_at = Column(DateTime(timezone=True))
    default_document_reader_model_id = Column(Integer)
    default_revornix_model_id = Column(Integer)
    default_file_document_parse_user_engine_id = Column(Integer)
    default_website_document_parse_user_engine_id = Column(Integer)
    default_read_mark_reason = Column(Integer, comment='0: Request once, 1: Scroll to the bottom of the document, 2: Manually Mark')
    default_user_file_system = Column(Integer)
    
    avatar = relationship("Attachment", backref="avatar_users")
    
class UserDefaultSettings(Base):
    __tablename__ = "user_default_settings"
    
    id = Column(Integer, primary_key=True)
    user_id = Column(Integer, ForeignKey("user.id"), primary_key=True)
    