"""update

Revision ID: fa28f73ff61d
Revises: 
Create Date: 2025-10-25 01:02:32.240964

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa28f73ff61d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth2_client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('is_confidential', sa.Boolean(), nullable=False),
    sa.Column('client_id', sa.String(length=100), nullable=False),
    sa.Column('client_secret', sa.String(length=200), nullable=True),
    sa.Column('allowed_grant_types', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('redirect_uris', sa.String(length=2000), nullable=False),
    sa.Column('scopes', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth2_client_client_id'), 'oauth2_client', ['client_id'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=100), nullable=False),
    sa.Column('avatar', sa.String(length=500), nullable=False),
    sa.Column('nickname', sa.String(length=50), nullable=False),
    sa.Column('last_login_ip', sa.String(length=50), nullable=True),
    sa.Column('last_login_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('slogan', sa.String(length=200), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True, comment='0: unk, 1: male, 2: female'),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('is_forbidden', sa.Boolean(), nullable=False),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('default_document_reader_model_id', sa.Integer(), nullable=True),
    sa.Column('default_revornix_model_id', sa.Integer(), nullable=True),
    sa.Column('default_file_document_parse_user_engine_id', sa.Integer(), nullable=True),
    sa.Column('default_website_document_parse_user_engine_id', sa.Integer(), nullable=True),
    sa.Column('default_read_mark_reason', sa.Integer(), nullable=True, comment='0: Request once, 1: Scroll to bottom, 2: Manually Mark'),
    sa.Column('default_user_file_system', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_nickname'), 'user', ['nickname'], unique=False)
    op.create_index(op.f('ix_user_uuid'), 'user', ['uuid'], unique=False)
    op.create_table('email_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nickname', sa.String(length=200), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_initial_password', sa.Boolean(), nullable=False, comment='Whether it is the initial password generated by the system'),
    sa.Column('initial_password', sa.String(length=255), nullable=True, comment='The initial password generated by the system'),
    sa.Column('has_seen_initial_password', sa.Boolean(), nullable=False, comment='Whether the initial password has been viewed'),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_user_email'), 'email_user', ['email'], unique=False)
    op.create_index(op.f('ix_email_user_user_id'), 'email_user', ['user_id'], unique=False)
    op.create_table('follow_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_user_id', sa.Integer(), nullable=False),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_follow_user_from_user_id'), 'follow_user', ['from_user_id'], unique=False)
    op.create_index(op.f('ix_follow_user_to_user_id'), 'follow_user', ['to_user_id'], unique=False)
    op.create_table('github_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('github_user_id', sa.String(length=100), nullable=True),
    sa.Column('github_user_name', sa.String(length=100), nullable=True),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_github_user_github_user_id'), 'github_user', ['github_user_id'], unique=False)
    op.create_index(op.f('ix_github_user_user_id'), 'github_user', ['user_id'], unique=False)
    op.create_table('google_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('google_user_id', sa.String(length=100), nullable=True),
    sa.Column('google_user_name', sa.String(length=100), nullable=True),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_google_user_google_user_id'), 'google_user', ['google_user_id'], unique=False)
    op.create_index(op.f('ix_google_user_user_id'), 'google_user', ['user_id'], unique=False)
    op.create_table('oauth2_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=255), nullable=False),
    sa.Column('client_id', sa.String(length=128), nullable=False),
    sa.Column('redirect_uri', sa.String(length=512), nullable=True),
    sa.Column('response_type', sa.String(length=32), nullable=True),
    sa.Column('scope', sa.String(length=512), nullable=True),
    sa.Column('auth_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('nonce', sa.String(length=255), nullable=True),
    sa.Column('code_challenge', sa.String(length=255), nullable=True),
    sa.Column('code_challenge_method', sa.String(length=16), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth2_code_client_id'), 'oauth2_code', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_code_code'), 'oauth2_code', ['code'], unique=True)
    op.create_table('oauth2_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('grant_type', sa.String(length=32), nullable=False),
    sa.Column('access_token', sa.String(length=500), nullable=False),
    sa.Column('refresh_token', sa.String(length=500), nullable=True),
    sa.Column('scope', sa.String(length=200), nullable=True),
    sa.Column('issued_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_in', sa.Integer(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token'),
    sa.UniqueConstraint('refresh_token')
    )
    op.create_index(op.f('ix_oauth2_token_client_id'), 'oauth2_token', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_token_user_id'), 'oauth2_token', ['user_id'], unique=False)
    op.create_table('phone_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_phone_user_phone'), 'phone_user', ['phone'], unique=False)
    op.create_index(op.f('ix_phone_user_user_id'), 'phone_user', ['user_id'], unique=False)
    op.create_table('user_default_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_default_settings_user_id'), 'user_default_settings', ['user_id'], unique=False)
    op.create_table('wechat_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('wechat_user_open_id', sa.String(length=100), nullable=True),
    sa.Column('wechat_user_union_id', sa.String(length=100), nullable=True),
    sa.Column('wechat_user_name', sa.String(length=100), nullable=True),
    sa.Column('delete_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wechat_user_user_id'), 'wechat_user', ['user_id'], unique=False)
    op.create_index(op.f('ix_wechat_user_wechat_user_open_id'), 'wechat_user', ['wechat_user_open_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_wechat_user_wechat_user_open_id'), table_name='wechat_user')
    op.drop_index(op.f('ix_wechat_user_user_id'), table_name='wechat_user')
    op.drop_table('wechat_user')
    op.drop_index(op.f('ix_user_default_settings_user_id'), table_name='user_default_settings')
    op.drop_table('user_default_settings')
    op.drop_index(op.f('ix_phone_user_user_id'), table_name='phone_user')
    op.drop_index(op.f('ix_phone_user_phone'), table_name='phone_user')
    op.drop_table('phone_user')
    op.drop_index(op.f('ix_oauth2_token_user_id'), table_name='oauth2_token')
    op.drop_index(op.f('ix_oauth2_token_client_id'), table_name='oauth2_token')
    op.drop_table('oauth2_token')
    op.drop_index(op.f('ix_oauth2_code_code'), table_name='oauth2_code')
    op.drop_index(op.f('ix_oauth2_code_client_id'), table_name='oauth2_code')
    op.drop_table('oauth2_code')
    op.drop_index(op.f('ix_google_user_user_id'), table_name='google_user')
    op.drop_index(op.f('ix_google_user_google_user_id'), table_name='google_user')
    op.drop_table('google_user')
    op.drop_index(op.f('ix_github_user_user_id'), table_name='github_user')
    op.drop_index(op.f('ix_github_user_github_user_id'), table_name='github_user')
    op.drop_table('github_user')
    op.drop_index(op.f('ix_follow_user_to_user_id'), table_name='follow_user')
    op.drop_index(op.f('ix_follow_user_from_user_id'), table_name='follow_user')
    op.drop_table('follow_user')
    op.drop_index(op.f('ix_email_user_user_id'), table_name='email_user')
    op.drop_index(op.f('ix_email_user_email'), table_name='email_user')
    op.drop_table('email_user')
    op.drop_index(op.f('ix_user_uuid'), table_name='user')
    op.drop_index(op.f('ix_user_nickname'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_oauth2_client_client_id'), table_name='oauth2_client')
    op.drop_table('oauth2_client')
    # ### end Alembic commands ###
